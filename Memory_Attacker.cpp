
#include <bits/stdc++.h>
#include <time.h>
#include <algorithm>
#include <chrono>
#include <iostream>
#include<vector>
using namespace std::chrono;
using namespace std;

int main(){
    while(1){
        long long r = 5120, c = 5120;
        long long * ptr = new long long[r*c];
        auto start = high_resolution_clock::now();
        auto stop = high_resolution_clock::now();
        auto duration = duration_cast<microseconds>(stop - start);
        long long seconds = duration.count()/1e6;
	cout<<"allocating"<<endl;        
	while(seconds<10){
            stop = high_resolution_clock::now();
            duration = duration_cast<microseconds>(stop - start);
            seconds = duration.count()/1e6;
        }
        delete [] ptr;
	cout<<"freed"<<endl;
        while(seconds<20){
            stop = high_resolution_clock::now();
            duration = duration_cast<microseconds>(stop - start);
            seconds = duration.count()/1e6;
        }
            
    }
    return 0;
}
