from fileinput import filename
import imp
import sys
import os
import signal
import math
import subprocess
import time
from os import listdir
from os.path import isfile, join
from tokenize import Number

def main():
    mypath = "/home/mostafa/Desktop/security_project/Malware-Detection-Behavioral-Based/Garbage_Data/"
    processes = get_processes()
    while(True):
        names = [f for f in listdir(mypath) if isfile(join(mypath, f))]
        for name in names:
            if(entropy(mypath+name) >= 5.5):
                extension = get_extension_type(mypath+name).split()[1]
                if(extension == "application/octet-stream"):
                    print("we have detected a virsued file with name:",name)
                    text = subprocess.check_output("ausearch -f "+name, shell=True)
                    start_index = text.find("ppid=") + 5
                    start_index2 = text.find("pid=", text.find("pid=") + 1) + 5
                    number = int(text[start_index:start_index+5])
                    number2 = int(text[start_index2:start_index2+5])
                    final = str(number)
                    # final2 = str(number2)
                    process_name = subprocess.check_output("ps -p "+final+" -o comm=", shell=True)
                    process_name = process_name.strip()
                    print(process_name)
                    print(("we detected unusual behaviour in process "+process_name+" enter y to kill the process and add it to blacklist or n to leave it"))
                    x=input()
                    if x=="yes":
                        try:
                            for line in os.popen("ps ax | grep " + process_name + " | grep -v grep"):
                                fields = line.split()
                                pid = fields[0]
                                os.kill(int(pid), signal.SIGKILL)
                            print("Process Successfully terminated")
                        except:
                            print("Error Encountered while running script")
                        # kill(final2)
                        # kill(final)
                        print(final,"is killed!")
                        add_to_blacklist(process_name)
                        subprocess.check_output("chmod -x "+process_name, shell=True)
                        return 0
        time.sleep(0.2)
        


def kill(id):
    s="pkill -f "
    s+=id
    nothing = subprocess.check_output(s, shell=True)

        

def add_to_blacklist(filename):
    # s= "chmod -x "
    # s+=filename
    # subprocess.check_output(s, shell=True)
    file1 = open('blacklist.txt', 'a')
    file1.write(filename+'\n')
    file1.close()




def get_processes():
    output = subprocess.check_output("ps -a | awk '{print $4}'", shell=True)
    arr = output.split("\n")
    arr = list(set(arr))
    del arr[0]
    return arr
        

def entropy(filename):
    #print(filename)
    file_size = os.path.getsize(filename)
    if(file_size>20000):
        return 7.5
    with open(filename, 'rb') as f:
        byteArr = list(f.read())

    fileSize = len(byteArr)
    print('File size in bytes: {:,d}'.format(fileSize))
    # calculate the frequency of each byte value in the file
    freqList = []
    for b in range(256):
        ctr = 0
        for byte in byteArr:
            if ord(byte) == b:
                ctr += 1
        freqList.append(float(ctr) / fileSize)
        
    # Shannon entropy
    ent = 0.0
    for freq in freqList:
        if freq > 0:
            ent = ent + freq * math.log(freq, 2)
    ent = -ent
    # print('Shannon entropy: {}'.format(ent))
    return ent

def get_extension_type(filename):
    output = subprocess.check_output("file --mime-type "+filename, shell=True)
    return output

if __name__ == "__main__":
    main()
