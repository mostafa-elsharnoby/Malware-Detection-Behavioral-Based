from cgitb import text
import subprocess
import os
from time import sleep

def get_heap(id):
    s="pmap -X "
    s+=id
    s+="|grep -A5 \"heap\" | grep '[^libgcc_s.so.1]$' | awk '{print $6}'"
    size = subprocess.check_output(s, shell=True)
    total_size = 0
    elements = size.split("\n")
    elements.pop()
    for element in elements:
        total_size += int(element)

    return total_size

def kill(id):
    s="kill -9 "
    s+=id
    subprocess.check_output(s, shell=True)
    


    
print(get_heap('18935'))
# print(IDs)

# output = subprocess.check_output("pmap -X 1289", shell=True)
# print(output)
sizes = {}
counters = {}
while(1):
    # wait 1 sec
    output = subprocess.check_output("ps -a", shell=True)
    arr = output.split("\n")
    IDs =[]
    arr.pop(0)
    arr.pop()
    for a in arr:
        IDs.append(a[0:6].strip())
    for id in IDs:
        sizes[id] = get_heap(id)
        if(not(id in counters)):
            counters[id]=0


    sleep(8)
    for id in IDs:
        if(abs(sizes[id] - get_heap(id))> 20000):
            print("ProcessID:",id,"-> Counter:",counters[id])
            counters[id] += 1
            if(counters[id]>6):
                kill(id)
                print(id, "killed successfully!!!!")
                counters[id]=0
                sizes[id]=0
                #kill here
    

    
        